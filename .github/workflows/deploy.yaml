name: Deploy Azure App Service

on:
  pull_request_target:
    types:
      - 'closed'
    branches:
      - 'main'

permissions:
  actions: write
  contents: read
  id-token: write
  issues: write
  pull-requests: write

env:
  RESOURCE_GROUP: rg-arfan-pantua
  APP_SERVICE_PLAN: flexi-dev-portal-plan
  APP_NAME: flexi-dev-portal-app
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE_NAME: arfanpantua/flexi-portal
  WEBSITES_PORT: 80

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Generate a unique tag for the Docker image (using commit SHA or timestamp)
      - name: Generate Docker Image Tag
        id: generate-tag
        run: |
          TAG=$(echo "${{ github.sha }}" | cut -c1-7)-$(date +%s)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Generated tag: $TAG"

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG }} -f Dockerfile .

      # Push Docker image to registry
      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG }}

      # Log in to Azure using service principal
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set the Azure subscription
      - name: Set Azure Subscription
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Create or update App Service Plan
      - name: Create App Service Plan
        run: |
          az appservice plan create \
            --name ${{ env.APP_SERVICE_PLAN }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --sku B1 \
            --is-linux

      # Create or update Web App with the new image tag
      - name: Create or Update Web App
        run: |
          az webapp create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --plan ${{ env.APP_SERVICE_PLAN }} \
            --name ${{ env.APP_NAME }} \
            --deployment-container-image-name ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG }} || \
          az webapp config container set \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.APP_NAME }} \
            --docker-custom-image-name ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG }}

      # Set App Service settings
      - name: Set App Settings
        run: |
          az webapp config appsettings set \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.APP_NAME }} \
            --settings WEBSITES_PORT=${{ env.WEBSITES_PORT }}

      # Output the Web App URL
      - name: Get Web App URL
        run: |
          az webapp show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.APP_NAME }} \
            --query defaultHostName \
            --output tsv